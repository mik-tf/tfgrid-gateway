global
    log /dev/log local0
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options prefer-client-ciphers no-sslv3 no-tlsv10 no-tlsv11 no-tlsv12

defaults
    log global
    mode tcp
    option tcplog
    option dontlognull
    timeout connect 5000
    timeout client 50000
    timeout server 50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

# HTTP frontend
frontend http_frontend
    bind *:80
    mode http
    option httplog
    default_backend http_backend

# HTTPS frontend
frontend https_frontend
    bind *:443
    mode http
    option httplog
    default_backend https_backend

# TCP proxy frontends
{% for port in proxy_ports | default([8080, 8443]) %}
frontend tcp_frontend_{{ port }}
    bind *:{{ port }}
    mode tcp
    option tcplog
    default_backend tcp_backend_{{ port }}
{% endfor %}

# UDP proxy frontends
{% for port in udp_ports | default([]) %}
frontend udp_frontend_{{ port }}
    bind *:{{ port }}
    mode udp
    default_backend udp_backend_{{ port }}
{% endfor %}

# Backends
backend http_backend
    mode http
    balance roundrobin
{% for host in groups['internal'] %}
    server {{ host }} {{ hostvars[host]['internal_ip'] | default(host) }}:80 check
{% endfor %}

backend https_backend
    mode http
    balance roundrobin
{% for host in groups['internal'] %}
    server {{ host }} {{ hostvars[host]['internal_ip'] | default(host) }}:443 check
{% endfor %}

{% for port in proxy_ports | default([8080, 8443]) %}
backend tcp_backend_{{ port }}
    mode tcp
    balance roundrobin
{% for host in groups['internal'] %}
    server {{ host }}_{{ port }} {{ hostvars[host]['internal_ip'] | default(host) }}:{{ port }} check
{% endfor %}
{% endfor %}

{% for port in udp_ports | default([]) %}
backend udp_backend_{{ port }}
    mode udp
    balance roundrobin
{% for host in groups['internal'] %}
    server {{ host }}_{{ port }} {{ hostvars[host]['internal_ip'] | default(host) }}:{{ port }} check
{% endfor %}
{% endfor %}

# Stats page
listen stats
    bind *:8404
    mode http
    stats enable
    stats uri /stats
    stats refresh 10s
    stats admin if TRUE